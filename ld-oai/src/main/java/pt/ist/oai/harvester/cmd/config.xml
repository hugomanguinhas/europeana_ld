<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<entry key="info.Verbs.help">Prints this message</entry>
<entry key="info.Verbs.host">URL of the repository</entry>

<!-- Identify -->
<entry key="info.Identify">
    This verb is used to retrieve information about a repository.
    Some of the information returned is required as part of the OAI-PMH. 
    Repositories may also employ the Identify verb to return additional 
    descriptive information.
</entry>

<!-- ListIdentifiers -->
<entry key="info.ListIdentifiers">
    This verb is an abbreviated form of ListRecords, retrieving only headers 
    rather than records. 
    Optional arguments permit selective harvesting of headers based on set 
    membership and/or datestamp. Depending on the repository's support 
    for deletions, a returned header may have a status attribute of "deleted"
    if a record matching the arguments specified in the request has been 
    deleted.
</entry>
<entry key="info.ListIdentifiers.from">An optional argument with a UTCdatetime value, which specifies a lower bound for datestamp-based selective harvesting.</entry>
<entry key="info.ListIdentifiers.until">An optional argument with a UTCdatetime value, which specifies a upper bound for datestamp-based selective harvesting.</entry>
<entry key="info.ListIdentifiers.metadataPrefix">A required argument, which specifies that headers should be returned only if the metadata format matching the supplied metadataPrefix is available or, depending on the repository's support for deletions, has been deleted. 
The metadata formats supported by a repository and for a particular item can be retrieved using the ListMetadataFormats request.</entry>
<entry key="info.ListIdentifiers.set">An optional argument with a setSpec value , which specifies set criteria for selective harvesting.</entry>

<!-- ListMetadataFormats -->
<entry key="info.ListMetadataFormats">
    This verb is used to retrieve the metadata formats available from a 
    repository.
    An optional argument restricts the request to the formats available for a 
    specific item.
</entry>
<entry key="info.ListMetadataFormats.identifier">An optional argument that specifies the unique identifier of the item for which available metadata formats are being requested.
If this argument is omitted, then the response includes all metadata formats supported by this repository.
Note that the fact that a metadata format is supported by a repository does not mean that it can be disseminated from all items in the repository.</entry>

<!-- ListSets -->
<entry key="info.ListSets">
    This verb is used to retrieve the set structure of a repository
</entry>

<!-- GetRecord Verb -->
<entry key="info.GetRecord">
    This verb is used to retrieve an individual metadata record from a 
    repository. 
    Required arguments specify the identifier of the item from which the record
    is requested and the format of the metadata that should be included in the
    record. 
    Depending on the level at which a repository tracks deletions, a header
    with a "deleted" value for the status attribute may be returned, in case 
    the metadata format specified by the metadataPrefix is no longer available
    from the repository or from the specified item.
</entry>
<entry key="info.GetRecord.identifier">A required argument that specifies the unique identifier of the item in the repository from which the record must be disseminated.</entry>
<entry key="info.GetRecord.metadataPrefix">A required argument that specifies the metadataPrefix of the format that should be included in the metadata part of the returned record.
A record should only be returned if the format specified by the metadataPrefix can be disseminated from the item identified by the value of the identifier argument.
The metadata formats supported by a repository and for a particular record can be retrieved using the ListMetadataFormats request.</entry>
<entry key="info.GetRecord.file">An optional argument that specifies where to write the record returned from the repository.</entry>
<entry key="info.GetRecord.detail">An optional argument that specifies the level of detail when writting the record into the output. The default value is 'record-only'.
'record-only' Only the content of the metadata record is written. 
'both'        Both the metadata record and header are written.
</entry>

<!-- ListRecords Verb -->
<entry key="info.ListRecords">
    This verb is used to harvest records from a repository.
    Optional arguments permit selective harvesting of records based on set 
    membership and/or datestamp. 
    Depending on the repository's support for deletions, a returned header may
    have a status attribute of "deleted" if a record matching the arguments 
    specified in the request has been deleted. No metadata will be presented 
    for records with deleted status.
</entry>
<entry key="info.ListRecords.from">An optional argument with a UTCdatetime value, which specifies a lower bound for datestamp-based selective harvesting.</entry>
<entry key="info.ListRecords.until">An optional argument with a UTCdatetime value, which specifies a upper bound for datestamp-based selective harvesting.</entry>
<entry key="info.ListRecords.set">An optional argument with a setSpec value, which specifies set criteria for selective harvesting.</entry>
<entry key="info.ListRecords.metadataPrefix">A required argument that specifies the metadataPrefix of the format that should be included in the metadata part of the returned records. 
Records should be included only for items from which the metadata format matching the metadataPrefix can be disseminated.
The metadata formats supported by a repository and for a particular item can be retrieved using the ListMetadataFormats request.</entry>
<entry key="info.ListRecords.output">An optional argument that specifies the type of output. The default value is 'screen'.
'screen' The records are written to the screen. 
'zip' All records are stored in a compressed zip file
'dir' All records are stored in a directory.
'xml' The records are written into a single xml file. (TODO)
'xml-zip' The records are written into a single xml file inside a compressed zip file. (TODO)
</entry>
<entry key="info.ListRecords.file">An optional argument that specifies the destination file for the 'zip', 'dir' and 'xml' output options.</entry>
<entry key="info.ListRecords.detail">An optional argument that specifies the level of detail when writting the records into the output. The default value is 'record-only'.
'record-only' Only the content of the metadata record is written. 
'both'        Both the metadata record and header are written.
</entry>

<entry key="info.Verbs">
usage: harvester [-help] &lt;verb&gt; &lt;options&gt;

List of available requests (verbs) as defined in the protocol:

Identify              Used to retrieve information about a repository.

ListIdentifiers       An abbreviated form of ListRecords, retrieving only 
                      headers rather than records.

ListMetadataFormats   Used to retrieve the metadata formats available from a 
                      repository.

ListSets              Used to retrieve the set structure of a repository

GetRecord             Used to retrieve an individual metadata record from a 
                      repository.

ListRecords           Used to harvest records from a repository.
</entry>
<entry key="layout.header">
+-----------------------------------------------------------------------------+
|   The Open Archives Initiative Protocol for Metadata Harvesting (OAI-PMH)   |
|                                                                             |
|                               -= Harvester =-                               |
|                          (client-side application)                          |
+-----------------------------------------------------------------------------+
| Protocol Version 2.0 of 2002-06-14                                          |
| (http://www.openarchives.org/OAI/2.0/openarchivesprotocol.htm)              |
|                                                                             |
| Implementation Version: 1.0                                                 |
+-----------------------------------------------------------------------------+
</entry>
<entry key="layout.response">
+------------------------------- Response ------------------------------------+
</entry>
</properties>